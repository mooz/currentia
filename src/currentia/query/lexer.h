/* Generated by re2c 0.13.5 on Mon Jun 18 19:15:03 2012 */
// -*- c++ -*-

// re2c --case-insensitive -i -o lex.cc lex.re

#ifndef CURRENTIA_QUERY_LEXER_H_
#define CURRENTIA_QUERY_LEXER_H_

#include <list>
#include <iostream>
#include <algorithm>
#include <functional>
#include <sstream>

#include <ctype.h>
#include <string.h>

#include "currentia/trait/non-copyable.h"



namespace currentia {
    class Lexer : private NonCopyable<Lexer> {
    private:
        std::istream* ifs_ptr_;

        char* buffer_;
        char* yy_cursor_;
        char* yy_limit_;
        char* current_token_begin_;
        long buffer_size_;
        long line_number_;

    public:
        typedef Lexer* ptr_t;

        enum Token {
            // {{{ DML --------------------------------
            TOKEN_SELECT,                 // "SELECT"
            TOKEN_FROM,                   // "FROM"
            TOKEN_WHERE,                  // "WHERE"
            // conjunctives
            TOKEN_AND,                    // "AND"
            TOKEN_OR,                     // "OR"
            // }}} DML --------------------------------

            // {{{ DDL --------------------------------
            TOKEN_CREATE,                 // "CREATE"
            TOKEN_STREAM,                 // "STREAM"
            TOKEN_TABLE,                  // "TABLE"
            // }}} DDL --------------------------------

            // identifier
            TOKEN_NAME,                   // [a-zA-Z_][a-zA-Z0-9_]*

            // string
            TOKEN_STRING,                 // "[\"]*"

            // numbers
            TOKEN_INTEGER,                // [0-9]
            TOKEN_FLOAT,                  // [0-9].[0-9]*

            // misc
            TOKEN_NOT,                    // NOT
            TOKEN_IN,                     // IN

            // window specification
            TOKEN_ROWS,                   // ROWS
            TOKEN_MSEC,                   // MSEC
            TOKEN_SEC,                    // SEC
            TOKEN_MIN,                    // MIN
            TOKEN_HOUR,                   // HOUR
            TOKEN_DAY,                    // DAY
            TOKEN_ADVANCE,                // ADVANCE
            TOKEN_LBRACKET,               // "["
            TOKEN_RBRACKET,               // "]"

            // other symbols
            TOKEN_COMMA,                  // ","
            TOKEN_DOT,                    // "."
            TOKEN_LPAREN,                 // "("
            TOKEN_RPAREN,                 // ")"

            // comparator
            TOKEN_EQUAL,                  // "="
            TOKEN_NOT_EQUAL,              // "!="
            TOKEN_LESS_THAN,              // "<"
            TOKEN_LESS_THAN_EQUAL,        // "<="
            TOKEN_GREATER_THAN,           // ">"
            TOKEN_GREATER_THAN_EQUAL,     // ">="

            // error
            TOKEN_UNKNOWN,
            TOKEN_EOS,                    //  End of Stream
        };

        Lexer(std::istream* ifs_ptr, long buffer_init_size = 1024):
            ifs_ptr_(ifs_ptr),
            buffer_size_(buffer_init_size),
            line_number_(1) {
            // Allocate
            buffer_ = reinterpret_cast<char*>(malloc(sizeof(char) * buffer_size_));
            // Init
            yy_cursor_ = yy_limit_ = current_token_begin_ = buffer_;
        }

        ~Lexer() {
            free(buffer_);
        }

        bool fill(int n) {
            if (ifs_ptr_->eof())
                return false;

            int rest_size = yy_limit_ - current_token_begin_;
            if (rest_size + n >= buffer_size_) {
                // Extend buffer
                buffer_ = reinterpret_cast<char*>(realloc(buffer_, buffer_size_ *= 2));
                // Adjust
                yy_cursor_ = buffer_ + (yy_cursor_ - current_token_begin_);
                current_token_begin_ = buffer_;
                yy_limit_ = buffer_ + rest_size;
            } else {
                // Shift remained characters in the buffer_ to head of the buffer_
                memmove(buffer_, current_token_begin_, sizeof(char) * rest_size);
                // Adjust
                yy_cursor_ = buffer_ + (yy_cursor_ - current_token_begin_);
                current_token_begin_ = buffer_;
                yy_limit_ = buffer_ + rest_size;
            }

            // Read characters from input stream
            int read_size = buffer_size_ - rest_size;
            ifs_ptr_->read(yy_limit_, read_size);
            yy_limit_ += ifs_ptr_->gcount();

            return true;
        }

        std::string get_token_text() {
            return std::string(current_token_begin_, current_token_begin_ + get_token_length());
        }
        int get_token_length() {
            return yy_cursor_ - current_token_begin_;
        }

        enum Token get_next_token(void) {
        start:
            current_token_begin_ = yy_cursor_;

            
        {
            char yych;

            if ((yy_limit_ - yy_cursor_) < 8) if (!fill(8)) { return TOKEN_EOS; }
            yych = *yy_cursor_;
            switch (yych) {
            case 0x00:    goto yy47;
            case '\t':
            case '\v':
            case '\f':
            case ' ':    goto yy5;
            case '\n':    goto yy7;
            case '\r':    goto yy8;
            case '!':    goto yy42;
            case '"':    goto yy24;
            case '#':    goto yy3;
            case '(':    goto yy36;
            case ')':    goto yy38;
            case ',':    goto yy32;
            case '.':    goto yy34;
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':    goto yy26;
            case '<':    goto yy43;
            case '=':    goto yy40;
            case '>':    goto yy45;
            case 'A':
            case 'a':    goto yy13;
            case 'B':
            case 'E':
            case 'G':
            case 'J':
            case 'K':
            case 'L':
            case 'P':
            case 'Q':
            case 'U':
            case 'V':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'b':
            case 'e':
            case 'g':
            case 'j':
            case 'k':
            case 'l':
            case 'p':
            case 'q':
            case 'u':
            case 'v':
            case 'x':
            case 'y':
            case 'z':    goto yy23;
            case 'C':
            case 'c':    goto yy15;
            case 'D':
            case 'd':    goto yy22;
            case 'F':
            case 'f':    goto yy11;
            case 'H':
            case 'h':    goto yy21;
            case 'I':
            case 'i':    goto yy18;
            case 'M':
            case 'm':    goto yy20;
            case 'N':
            case 'n':    goto yy17;
            case 'O':
            case 'o':    goto yy14;
            case 'R':
            case 'r':    goto yy19;
            case 'S':
            case 's':    goto yy9;
            case 'T':
            case 't':    goto yy16;
            case 'W':
            case 'w':    goto yy12;
            case '[':    goto yy28;
            case ']':    goto yy30;
            default:    goto yy49;
            }
yy2:
            { line_number_++; goto start; }
yy3:
            ++yy_cursor_;
            yych = *yy_cursor_;
            goto yy137;
yy4:
            { goto start; }
yy5:
            ++yy_cursor_;
            { goto start; }
yy7:
            yych = *++yy_cursor_;
            goto yy2;
yy8:
            yych = *++yy_cursor_;
            goto yy2;
yy9:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case 'E':
            case 'e':    goto yy122;
            case 'T':
            case 't':    goto yy123;
            default:    goto yy66;
            }
yy10:
            { return TOKEN_NAME; }
yy11:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'R':
            case 'r':    goto yy118;
            default:    goto yy66;
            }
yy12:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'H':
            case 'h':    goto yy113;
            default:    goto yy66;
            }
yy13:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'D':
            case 'd':    goto yy103;
            case 'N':
            case 'n':    goto yy104;
            default:    goto yy66;
            }
yy14:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'R':
            case 'r':    goto yy101;
            default:    goto yy66;
            }
yy15:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'R':
            case 'r':    goto yy95;
            default:    goto yy66;
            }
yy16:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'A':
            case 'a':    goto yy90;
            default:    goto yy66;
            }
yy17:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'O':
            case 'o':    goto yy87;
            default:    goto yy66;
            }
yy18:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'N':
            case 'n':    goto yy85;
            default:    goto yy66;
            }
yy19:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'O':
            case 'o':    goto yy81;
            default:    goto yy66;
            }
yy20:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'I':
            case 'i':    goto yy74;
            case 'S':
            case 's':    goto yy75;
            default:    goto yy66;
            }
yy21:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'O':
            case 'o':    goto yy70;
            default:    goto yy66;
            }
yy22:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'A':
            case 'a':    goto yy67;
            default:    goto yy66;
            }
yy23:
            yych = *++yy_cursor_;
            goto yy66;
yy24:
            yych = *++yy_cursor_;
            goto yy62;
yy25:
            { return TOKEN_UNKNOWN; }
yy26:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '\n':    goto yy27;
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':    goto yy59;
            default:    goto yy56;
            }
yy27:
            { return TOKEN_INTEGER; }
yy28:
            ++yy_cursor_;
            { return TOKEN_LBRACKET; }
yy30:
            ++yy_cursor_;
            { return TOKEN_RBRACKET; }
yy32:
            ++yy_cursor_;
            { return TOKEN_COMMA; }
yy34:
            ++yy_cursor_;
            { return TOKEN_DOT; }
yy36:
            ++yy_cursor_;
            { return TOKEN_LPAREN; }
yy38:
            ++yy_cursor_;
            { return TOKEN_RPAREN; }
yy40:
            ++yy_cursor_;
            { return TOKEN_EQUAL; }
yy42:
            yych = *++yy_cursor_;
            switch (yych) {
            case '=':    goto yy54;
            default:    goto yy25;
            }
yy43:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '=':    goto yy52;
            default:    goto yy44;
            }
yy44:
            { return TOKEN_LESS_THAN; }
yy45:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '=':    goto yy50;
            default:    goto yy46;
            }
yy46:
            { return TOKEN_GREATER_THAN; }
yy47:
            ++yy_cursor_;
            { return TOKEN_EOS; }
yy49:
            yych = *++yy_cursor_;
            goto yy25;
yy50:
            ++yy_cursor_;
            { return TOKEN_GREATER_THAN_EQUAL; }
yy52:
            ++yy_cursor_;
            { return TOKEN_LESS_THAN_EQUAL; }
yy54:
            ++yy_cursor_;
            { return TOKEN_NOT_EQUAL; }
yy56:
            ++yy_cursor_;
            if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
            yych = *yy_cursor_;
            switch (yych) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':    goto yy56;
            default:    goto yy58;
            }
yy58:
            { return TOKEN_FLOAT; }
yy59:
            ++yy_cursor_;
            if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
            yych = *yy_cursor_;
            switch (yych) {
            case '\n':    goto yy58;
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':    goto yy59;
            default:    goto yy56;
            }
yy61:
            ++yy_cursor_;
            if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
            yych = *yy_cursor_;
yy62:
            switch (yych) {
            case '"':    goto yy63;
            default:    goto yy61;
            }
yy63:
            ++yy_cursor_;
            { return TOKEN_STRING; }
yy65:
            ++yy_cursor_;
            if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
            yych = *yy_cursor_;
yy66:
            switch (yych) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy10;
            }
yy67:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'Y':
            case 'y':    goto yy68;
            default:    goto yy66;
            }
yy68:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy69;
            }
yy69:
            { return TOKEN_DAY; }
yy70:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'U':
            case 'u':    goto yy71;
            default:    goto yy66;
            }
yy71:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'R':
            case 'r':    goto yy72;
            default:    goto yy66;
            }
yy72:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy73;
            }
yy73:
            { return TOKEN_HOUR; }
yy74:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'N':
            case 'n':    goto yy79;
            default:    goto yy66;
            }
yy75:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy76;
            default:    goto yy66;
            }
yy76:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'C':
            case 'c':    goto yy77;
            default:    goto yy66;
            }
yy77:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy78;
            }
yy78:
            { return TOKEN_MSEC; }
yy79:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy80;
            }
yy80:
            { return TOKEN_MIN; }
yy81:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'W':
            case 'w':    goto yy82;
            default:    goto yy66;
            }
yy82:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'S':
            case 's':    goto yy83;
            default:    goto yy66;
            }
yy83:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy84;
            }
yy84:
            { return TOKEN_ROWS; }
yy85:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy86;
            }
yy86:
            { return TOKEN_IN; }
yy87:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'T':
            case 't':    goto yy88;
            default:    goto yy66;
            }
yy88:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy89;
            }
yy89:
            { return TOKEN_NOT; }
yy90:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'B':
            case 'b':    goto yy91;
            default:    goto yy66;
            }
yy91:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'L':
            case 'l':    goto yy92;
            default:    goto yy66;
            }
yy92:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy93;
            default:    goto yy66;
            }
yy93:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy94;
            }
yy94:
            { return TOKEN_TABLE; }
yy95:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy96;
            default:    goto yy66;
            }
yy96:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'A':
            case 'a':    goto yy97;
            default:    goto yy66;
            }
yy97:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'T':
            case 't':    goto yy98;
            default:    goto yy66;
            }
yy98:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy99;
            default:    goto yy66;
            }
yy99:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy100;
            }
yy100:
            { return TOKEN_CREATE; }
yy101:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy102;
            }
yy102:
            { return TOKEN_OR; }
yy103:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'V':
            case 'v':    goto yy107;
            default:    goto yy66;
            }
yy104:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'D':
            case 'd':    goto yy105;
            default:    goto yy66;
            }
yy105:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy106;
            }
yy106:
            { return TOKEN_AND; }
yy107:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'A':
            case 'a':    goto yy108;
            default:    goto yy66;
            }
yy108:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'N':
            case 'n':    goto yy109;
            default:    goto yy66;
            }
yy109:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'C':
            case 'c':    goto yy110;
            default:    goto yy66;
            }
yy110:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy111;
            default:    goto yy66;
            }
yy111:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy112;
            }
yy112:
            { return TOKEN_ADVANCE; }
yy113:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy114;
            default:    goto yy66;
            }
yy114:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'R':
            case 'r':    goto yy115;
            default:    goto yy66;
            }
yy115:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy116;
            default:    goto yy66;
            }
yy116:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy117;
            }
yy117:
            { return TOKEN_WHERE; }
yy118:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'O':
            case 'o':    goto yy119;
            default:    goto yy66;
            }
yy119:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'M':
            case 'm':    goto yy120;
            default:    goto yy66;
            }
yy120:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy121;
            }
yy121:
            { return TOKEN_FROM; }
yy122:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'C':
            case 'c':    goto yy130;
            case 'L':
            case 'l':    goto yy129;
            default:    goto yy66;
            }
yy123:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'R':
            case 'r':    goto yy124;
            default:    goto yy66;
            }
yy124:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy125;
            default:    goto yy66;
            }
yy125:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'A':
            case 'a':    goto yy126;
            default:    goto yy66;
            }
yy126:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'M':
            case 'm':    goto yy127;
            default:    goto yy66;
            }
yy127:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy128;
            }
yy128:
            { return TOKEN_STREAM; }
yy129:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'E':
            case 'e':    goto yy132;
            default:    goto yy66;
            }
yy130:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy131;
            }
yy131:
            { return TOKEN_SEC; }
yy132:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'C':
            case 'c':    goto yy133;
            default:    goto yy66;
            }
yy133:
            yych = *++yy_cursor_;
            switch (yych) {
            case 'T':
            case 't':    goto yy134;
            default:    goto yy66;
            }
yy134:
            ++yy_cursor_;
            switch ((yych = *yy_cursor_)) {
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
            case '_':
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':    goto yy65;
            default:    goto yy135;
            }
yy135:
            { return TOKEN_SELECT; }
yy136:
            ++yy_cursor_;
            if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
            yych = *yy_cursor_;
yy137:
            switch (yych) {
            case '\n':
            case '\r':    goto yy138;
            default:    goto yy136;
            }
yy138:
            ++yy_cursor_;
            yych = *yy_cursor_;
            goto yy4;
        }

        }

        static bool is_token_conjunctive(Token token) {
            return token == TOKEN_AND || token == TOKEN_OR;
        }

        static bool is_token_value(Token token) {
            return token == TOKEN_STRING || token == TOKEN_INTEGER || token == TOKEN_FLOAT;
        }

        static std::string token_to_string(enum Token token) {
            switch (token) {
            case TOKEN_SELECT:
                return "SELECT";
            case TOKEN_FROM:
                return "FROM";
            case TOKEN_WHERE:
                return "WHERE";
            case TOKEN_AND:
                return "AND";
            case TOKEN_OR:
                return "OR";
            case TOKEN_NOT:
                return "NOT";
            case TOKEN_IN:
                return "IN";
            case TOKEN_ROWS:
                return "ROWS";
            case TOKEN_MSEC:
                return "MSEC";
            case TOKEN_SEC:
                return "SEC";
            case TOKEN_MIN:
                return "MIN";
            case TOKEN_HOUR:
                return "HOUR";
            case TOKEN_DAY:
                return "DAY";
            case TOKEN_ADVANCE:
                return "ADVANCE";
            case TOKEN_CREATE:
                return "CREATE";
            case TOKEN_STREAM:
                return "STREAM";
            case TOKEN_TABLE:
                return "TABLE";
            case TOKEN_NAME:
                return "NAME";
            case TOKEN_STRING:
                return "STRING";
            case TOKEN_INTEGER:
                return "INTEGER";
            case TOKEN_FLOAT:
                return "FLOAT";
            case TOKEN_COMMA:
                return "COMMA";
            case TOKEN_DOT:
                return "DOT";
            case TOKEN_LPAREN:
                return "LPAREN";
            case TOKEN_RPAREN:
                return "RPAREN";
            case TOKEN_EQUAL:
                return "EQUAL";
            case TOKEN_NOT_EQUAL:
                return "NOT_EQUAL";
            case TOKEN_LESS_THAN:
                return "LESS_THAN";
            case TOKEN_LESS_THAN_EQUAL:
                return "LESS_THAN_EQUAL";
            case TOKEN_GREATER_THAN:
                return "GREATER_THAN";
            case TOKEN_GREATER_THAN_EQUAL:
                return "GREATER_THAN_EQUAL";
            case TOKEN_EOS:
                return "EOS";
            case TOKEN_UNKNOWN:
                return "UNKNOWN";
            default:
                return "MISSING_STRING_EXPRESSION";
            }
        }

        long get_current_line_number() {
            return line_number_;
        }

        long get_current_cursor_point() {
            return 0;
        }

        template <typename Stream>
        void print_error_point(Stream& stream = std::cout) {
            // stream << current_line_ << std::endl;
            // for (int i = 0; i < get_current_cursor_point() - 1; ++i)
            //     stream << '_';
            // stream << '^';
        }
    };
}

// int main(int argc, char** argv)
// {
//     currentia::Lexer lexer(&std::cin);
//     currentia::Lexer::Token token;

//     while ((token = lexer.get_next_token()) != currentia::Lexer::TOKEN_EOS) {
//         std::cout << "token => " << currentia::Lexer::token_to_string(token)
//                   << " '" << lexer.get_token_text() << "'" << std::endl;
//     }

//     return 0;
// }

#endif  /* ! CURRENTIA_QUERY_LEXER_H_  */
