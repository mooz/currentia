/* Generated by re2c 0.13.5 on Tue Jun 19 02:46:49 2012 */
// -*- c++ -*-

// re2c --case-insensitive -i -o lex.cc lex.re

#ifndef CURRENTIA_QUERY_LEXER_H_
#define CURRENTIA_QUERY_LEXER_H_

#include <list>
#include <iostream>
#include <algorithm>
#include <functional>
#include <sstream>

#include <ctype.h>
#include <string.h>

#include "currentia/trait/non-copyable.h"



#define dump(x) \
        std::cout << #x << " => [" << (x) << "]" << std::endl

namespace currentia {
    class Lexer : private NonCopyable<Lexer> {
    private:
        std::istream* ifs_ptr_;

        char* buffer_;
        char* yy_cursor_;
        char* yy_marker_;
        char* yy_limit_;
        char* token_begin_;
        long buffer_size_;
        long line_number_;

    public:
        typedef Lexer* ptr_t;

        enum Token {
            // {{{ DML --------------------------------
            TOKEN_SELECT,                 // "SELECT"
            TOKEN_FROM,                   // "FROM"
            TOKEN_WHERE,                  // "WHERE"
            // conjunctives
            TOKEN_AND,                    // "AND"
            TOKEN_OR,                     // "OR"
            // }}} DML --------------------------------

            // {{{ DDL --------------------------------
            TOKEN_CREATE,                 // "CREATE"
            TOKEN_STREAM,                 // "STREAM"
            TOKEN_TABLE,                  // "TABLE"
            // }}} DDL --------------------------------

            // identifier
            TOKEN_NAME,                   // [a-zA-Z_][a-zA-Z0-9_]*

            // string
            TOKEN_STRING,                 // "[\"]*"

            // numbers
            TOKEN_INTEGER,                // [1-9][0-9]*
            TOKEN_FLOAT,                  // [0-9].[0-9]*

            // misc
            TOKEN_NOT,                    // NOT
            TOKEN_IN,                     // IN

            // window specification
            TOKEN_ROWS,                   // ROWS
            TOKEN_MSEC,                   // MSEC
            TOKEN_SEC,                    // SEC
            TOKEN_MIN,                    // MIN
            TOKEN_HOUR,                   // HOUR
            TOKEN_DAY,                    // DAY
            TOKEN_ADVANCE,                // ADVANCE
            TOKEN_LBRACKET,               // "["
            TOKEN_RBRACKET,               // "]"

            // other symbols
            TOKEN_COMMA,                  // ","
            TOKEN_DOT,                    // "."
            TOKEN_LPAREN,                 // "("
            TOKEN_RPAREN,                 // ")"

            // comparator
            TOKEN_EQUAL,                  // "="
            TOKEN_NOT_EQUAL,              // "!="
            TOKEN_LESS_THAN,              // "<"
            TOKEN_LESS_THAN_EQUAL,        // "<="
            TOKEN_GREATER_THAN,           // ">"
            TOKEN_GREATER_THAN_EQUAL,     // ">="

            // error
            TOKEN_UNKNOWN,
            TOKEN_EOS,                    //  End of Stream
        };

        Lexer(std::istream* ifs_ptr, long buffer_init_size = 1024):
            ifs_ptr_(ifs_ptr),
            buffer_size_(buffer_init_size),
            line_number_(1) {
            // Allocate
            buffer_ = reinterpret_cast<char*>(malloc(sizeof(char) * buffer_size_));
            // Init
            yy_cursor_ = yy_marker_ = yy_limit_ = token_begin_ = buffer_;
        }

        ~Lexer() {
            free(buffer_);
        }

        inline
        int get_buffer_used_size() {
            return yy_limit_ - buffer_;
        }

        inline
        int get_buffer_allocated_size() {
            return buffer_size_;
        }

        bool fill(int n) {
            if (ifs_ptr_->eof() && (yy_limit_ - yy_cursor_) <= 0)
                return false;   // EOS

            int cursor_offset = yy_cursor_ - buffer_;
            int remained_characters_count = yy_limit_ - yy_cursor_;

            if (remained_characters_count + n >= buffer_size_) {
                // Extend buffer
                int yy_marker_offset = yy_marker_ - buffer_;
                int yy_limit_offset = yy_limit_ - buffer_;
                buffer_ = reinterpret_cast<char*>(realloc(buffer_, buffer_size_ *= 2));
                // Refresh Re-allocated memory
                yy_marker_ = buffer_ + yy_marker_offset;
                yy_limit_ = yy_limit_ + yy_limit_offset;
            } else if (remained_characters_count > 0) {
                // Shift remained characters in the buffer_ to head of the buffer_
                memmove(buffer_, yy_cursor_, sizeof(char) * remained_characters_count);
            }

            // Adjust position (shift)
            yy_cursor_ = token_begin_ = buffer_;
            yy_marker_ -= cursor_offset;
            yy_limit_ -= cursor_offset;

            // This line is very important (fill buffer with EOF)
            memset(yy_limit_, '\0', sizeof(char) * (buffer_size_ - remained_characters_count));

            // Read characters from input stream
            int read_size = buffer_size_ - remained_characters_count;
            ifs_ptr_->read(yy_limit_, read_size);
            yy_limit_ += ifs_ptr_->gcount();
            // Dirty hack (for stringstream which doesn't give us a EOF character)
            if (ifs_ptr_->gcount() == 0 && *(yy_limit_ -1) != '\0') {
                *yy_limit_ = '\0';
                ++yy_limit_;
            }

            return true;
        }

        std::string get_token_text() {
            return std::string(token_begin_, token_begin_ + get_token_length());
        }
        int get_token_length() {
            return yy_cursor_ - token_begin_;
        }

        enum Token get_next_token() {
        start:
            token_begin_ = yy_cursor_;

            
            {
                char yych;
                unsigned int yyaccept = 0;

                if ((yy_limit_ - yy_cursor_) < 8) if (!fill(8)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
                switch (yych) {
                case 0x00:    goto yy47;
                case '\t':
                case '\v':
                case '\f':
                case ' ':    goto yy5;
                case '\n':    goto yy7;
                case '\r':    goto yy8;
                case '!':    goto yy42;
                case '"':    goto yy24;
                case '#':    goto yy3;
                case '(':    goto yy36;
                case ')':    goto yy38;
                case ',':    goto yy32;
                case '.':    goto yy34;
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':    goto yy26;
                case '<':    goto yy43;
                case '=':    goto yy40;
                case '>':    goto yy45;
                case 'A':
                case 'a':    goto yy13;
                case 'B':
                case 'E':
                case 'G':
                case 'J':
                case 'K':
                case 'L':
                case 'P':
                case 'Q':
                case 'U':
                case 'V':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'b':
                case 'e':
                case 'g':
                case 'j':
                case 'k':
                case 'l':
                case 'p':
                case 'q':
                case 'u':
                case 'v':
                case 'x':
                case 'y':
                case 'z':    goto yy23;
                case 'C':
                case 'c':    goto yy15;
                case 'D':
                case 'd':    goto yy22;
                case 'F':
                case 'f':    goto yy11;
                case 'H':
                case 'h':    goto yy21;
                case 'I':
                case 'i':    goto yy18;
                case 'M':
                case 'm':    goto yy20;
                case 'N':
                case 'n':    goto yy17;
                case 'O':
                case 'o':    goto yy14;
                case 'R':
                case 'r':    goto yy19;
                case 'S':
                case 's':    goto yy9;
                case 'T':
                case 't':    goto yy16;
                case 'W':
                case 'w':    goto yy12;
                case '[':    goto yy28;
                case ']':    goto yy30;
                default:    goto yy49;
                }
yy2:
                { line_number_++; goto start; }
yy3:
                ++yy_cursor_;
                yych = *yy_cursor_;
                goto yy141;
yy4:
                { goto start; }
yy5:
                ++yy_cursor_;
                yych = *yy_cursor_;
                goto yy139;
yy6:
                { goto start; }
yy7:
                yych = *++yy_cursor_;
                goto yy2;
yy8:
                yych = *++yy_cursor_;
                goto yy2;
yy9:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case 'E':
                case 'e':    goto yy124;
                case 'T':
                case 't':    goto yy125;
                default:    goto yy68;
                }
yy10:
                { return TOKEN_NAME; }
yy11:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'R':
                case 'r':    goto yy120;
                default:    goto yy68;
                }
yy12:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'H':
                case 'h':    goto yy115;
                default:    goto yy68;
                }
yy13:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'D':
                case 'd':    goto yy105;
                case 'N':
                case 'n':    goto yy106;
                default:    goto yy68;
                }
yy14:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'R':
                case 'r':    goto yy103;
                default:    goto yy68;
                }
yy15:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'R':
                case 'r':    goto yy97;
                default:    goto yy68;
                }
yy16:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'A':
                case 'a':    goto yy92;
                default:    goto yy68;
                }
yy17:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'O':
                case 'o':    goto yy89;
                default:    goto yy68;
                }
yy18:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'N':
                case 'n':    goto yy87;
                default:    goto yy68;
                }
yy19:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'O':
                case 'o':    goto yy83;
                default:    goto yy68;
                }
yy20:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'I':
                case 'i':    goto yy76;
                case 'S':
                case 's':    goto yy77;
                default:    goto yy68;
                }
yy21:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'O':
                case 'o':    goto yy72;
                default:    goto yy68;
                }
yy22:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'A':
                case 'a':    goto yy69;
                default:    goto yy68;
                }
yy23:
                yych = *++yy_cursor_;
                goto yy68;
yy24:
                yyaccept = 0;
                yych = *(yy_marker_ = ++yy_cursor_);
                switch (yych) {
                case '"':    goto yy62;
                case '.':
                case '[':
                case ']':
                case '^':
                case '|':    goto yy65;
                default:    goto yy25;
                }
yy25:
                { return TOKEN_UNKNOWN; }
yy26:
                yyaccept = 1;
                yych = *(yy_marker_ = ++yy_cursor_);
                switch (yych) {
                case '.':    goto yy56;
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':    goto yy59;
                default:    goto yy27;
                }
yy27:
                { return TOKEN_INTEGER; }
yy28:
                ++yy_cursor_;
                { return TOKEN_LBRACKET; }
yy30:
                ++yy_cursor_;
                { return TOKEN_RBRACKET; }
yy32:
                ++yy_cursor_;
                { return TOKEN_COMMA; }
yy34:
                ++yy_cursor_;
                { return TOKEN_DOT; }
yy36:
                ++yy_cursor_;
                { return TOKEN_LPAREN; }
yy38:
                ++yy_cursor_;
                { return TOKEN_RPAREN; }
yy40:
                ++yy_cursor_;
                { return TOKEN_EQUAL; }
yy42:
                yych = *++yy_cursor_;
                switch (yych) {
                case '=':    goto yy54;
                default:    goto yy25;
                }
yy43:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '=':    goto yy52;
                default:    goto yy44;
                }
yy44:
                { return TOKEN_LESS_THAN; }
yy45:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '=':    goto yy50;
                default:    goto yy46;
                }
yy46:
                { return TOKEN_GREATER_THAN; }
yy47:
                ++yy_cursor_;
                { return TOKEN_EOS; }
yy49:
                yych = *++yy_cursor_;
                goto yy25;
yy50:
                ++yy_cursor_;
                { return TOKEN_GREATER_THAN_EQUAL; }
yy52:
                ++yy_cursor_;
                { return TOKEN_LESS_THAN_EQUAL; }
yy54:
                ++yy_cursor_;
                { return TOKEN_NOT_EQUAL; }
yy56:
                ++yy_cursor_;
                if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
                switch (yych) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':    goto yy56;
                default:    goto yy58;
                }
yy58:
                { return TOKEN_FLOAT; }
yy59:
                ++yy_cursor_;
                if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
                switch (yych) {
                case '.':    goto yy56;
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':    goto yy59;
                default:    goto yy61;
                }
yy61:
                yy_cursor_ = yy_marker_;
                switch (yyaccept) {
                case 0: 	goto yy25;
                case 1: 	goto yy27;
                case 2: 	goto yy64;
                }
yy62:
                yyaccept = 2;
                yy_marker_ = ++yy_cursor_;
                if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
                switch (yych) {
                case '"':    goto yy62;
                case '.':
                case '[':
                case ']':
                case '^':
                case '|':    goto yy65;
                default:    goto yy64;
                }
yy64:
                { return TOKEN_STRING; }
yy65:
                ++yy_cursor_;
                if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
                switch (yych) {
                case '"':    goto yy62;
                case '.':
                case '[':
                case ']':
                case '^':
                case '|':    goto yy65;
                default:    goto yy61;
                }
yy67:
                ++yy_cursor_;
                if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
yy68:
                switch (yych) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy10;
                }
yy69:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'Y':
                case 'y':    goto yy70;
                default:    goto yy68;
                }
yy70:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy71;
                }
yy71:
                { return TOKEN_DAY; }
yy72:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'U':
                case 'u':    goto yy73;
                default:    goto yy68;
                }
yy73:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'R':
                case 'r':    goto yy74;
                default:    goto yy68;
                }
yy74:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy75;
                }
yy75:
                { return TOKEN_HOUR; }
yy76:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'N':
                case 'n':    goto yy81;
                default:    goto yy68;
                }
yy77:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy78;
                default:    goto yy68;
                }
yy78:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'C':
                case 'c':    goto yy79;
                default:    goto yy68;
                }
yy79:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy80;
                }
yy80:
                { return TOKEN_MSEC; }
yy81:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy82;
                }
yy82:
                { return TOKEN_MIN; }
yy83:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'W':
                case 'w':    goto yy84;
                default:    goto yy68;
                }
yy84:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'S':
                case 's':    goto yy85;
                default:    goto yy68;
                }
yy85:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy86;
                }
yy86:
                { return TOKEN_ROWS; }
yy87:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy88;
                }
yy88:
                { return TOKEN_IN; }
yy89:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'T':
                case 't':    goto yy90;
                default:    goto yy68;
                }
yy90:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy91;
                }
yy91:
                { return TOKEN_NOT; }
yy92:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'B':
                case 'b':    goto yy93;
                default:    goto yy68;
                }
yy93:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'L':
                case 'l':    goto yy94;
                default:    goto yy68;
                }
yy94:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy95;
                default:    goto yy68;
                }
yy95:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy96;
                }
yy96:
                { return TOKEN_TABLE; }
yy97:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy98;
                default:    goto yy68;
                }
yy98:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'A':
                case 'a':    goto yy99;
                default:    goto yy68;
                }
yy99:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'T':
                case 't':    goto yy100;
                default:    goto yy68;
                }
yy100:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy101;
                default:    goto yy68;
                }
yy101:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy102;
                }
yy102:
                { return TOKEN_CREATE; }
yy103:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy104;
                }
yy104:
                { return TOKEN_OR; }
yy105:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'V':
                case 'v':    goto yy109;
                default:    goto yy68;
                }
yy106:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'D':
                case 'd':    goto yy107;
                default:    goto yy68;
                }
yy107:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy108;
                }
yy108:
                { return TOKEN_AND; }
yy109:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'A':
                case 'a':    goto yy110;
                default:    goto yy68;
                }
yy110:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'N':
                case 'n':    goto yy111;
                default:    goto yy68;
                }
yy111:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'C':
                case 'c':    goto yy112;
                default:    goto yy68;
                }
yy112:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy113;
                default:    goto yy68;
                }
yy113:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy114;
                }
yy114:
                { return TOKEN_ADVANCE; }
yy115:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy116;
                default:    goto yy68;
                }
yy116:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'R':
                case 'r':    goto yy117;
                default:    goto yy68;
                }
yy117:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy118;
                default:    goto yy68;
                }
yy118:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy119;
                }
yy119:
                { return TOKEN_WHERE; }
yy120:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'O':
                case 'o':    goto yy121;
                default:    goto yy68;
                }
yy121:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'M':
                case 'm':    goto yy122;
                default:    goto yy68;
                }
yy122:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy123;
                }
yy123:
                { return TOKEN_FROM; }
yy124:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'C':
                case 'c':    goto yy132;
                case 'L':
                case 'l':    goto yy131;
                default:    goto yy68;
                }
yy125:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'R':
                case 'r':    goto yy126;
                default:    goto yy68;
                }
yy126:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy127;
                default:    goto yy68;
                }
yy127:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'A':
                case 'a':    goto yy128;
                default:    goto yy68;
                }
yy128:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'M':
                case 'm':    goto yy129;
                default:    goto yy68;
                }
yy129:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy130;
                }
yy130:
                { return TOKEN_STREAM; }
yy131:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'E':
                case 'e':    goto yy134;
                default:    goto yy68;
                }
yy132:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy133;
                }
yy133:
                { return TOKEN_SEC; }
yy134:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'C':
                case 'c':    goto yy135;
                default:    goto yy68;
                }
yy135:
                yych = *++yy_cursor_;
                switch (yych) {
                case 'T':
                case 't':    goto yy136;
                default:    goto yy68;
                }
yy136:
                ++yy_cursor_;
                switch ((yych = *yy_cursor_)) {
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case 'A':
                case 'B':
                case 'C':
                case 'D':
                case 'E':
                case 'F':
                case 'G':
                case 'H':
                case 'I':
                case 'J':
                case 'K':
                case 'L':
                case 'M':
                case 'N':
                case 'O':
                case 'P':
                case 'Q':
                case 'R':
                case 'S':
                case 'T':
                case 'U':
                case 'V':
                case 'W':
                case 'X':
                case 'Y':
                case 'Z':
                case '_':
                case 'a':
                case 'b':
                case 'c':
                case 'd':
                case 'e':
                case 'f':
                case 'g':
                case 'h':
                case 'i':
                case 'j':
                case 'k':
                case 'l':
                case 'm':
                case 'n':
                case 'o':
                case 'p':
                case 'q':
                case 'r':
                case 's':
                case 't':
                case 'u':
                case 'v':
                case 'w':
                case 'x':
                case 'y':
                case 'z':    goto yy67;
                default:    goto yy137;
                }
yy137:
                { return TOKEN_SELECT; }
yy138:
                ++yy_cursor_;
                if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
yy139:
                switch (yych) {
                case '\t':
                case '\v':
                case '\f':
                case ' ':    goto yy138;
                default:    goto yy6;
                }
yy140:
                ++yy_cursor_;
                if (yy_limit_ <= yy_cursor_) if (!fill(1)) { return TOKEN_EOS; }
                yych = *yy_cursor_;
yy141:
                switch (yych) {
                case '\n':    goto yy142;
                default:    goto yy140;
                }
yy142:
                ++yy_cursor_;
                yych = *yy_cursor_;
                goto yy4;
            }

        }

        static bool is_token_conjunctive(Token token) {
            return token == TOKEN_AND || token == TOKEN_OR;
        }

        static bool is_token_value(Token token) {
            return token == TOKEN_STRING || token == TOKEN_INTEGER || token == TOKEN_FLOAT;
        }

        static std::string token_to_string(enum Token token) {
            switch (token) {
            case TOKEN_SELECT:
                return "SELECT";
            case TOKEN_FROM:
                return "FROM";
            case TOKEN_WHERE:
                return "WHERE";
            case TOKEN_AND:
                return "AND";
            case TOKEN_OR:
                return "OR";
            case TOKEN_NOT:
                return "NOT";
            case TOKEN_IN:
                return "IN";
            case TOKEN_ROWS:
                return "ROWS";
            case TOKEN_MSEC:
                return "MSEC";
            case TOKEN_SEC:
                return "SEC";
            case TOKEN_MIN:
                return "MIN";
            case TOKEN_HOUR:
                return "HOUR";
            case TOKEN_DAY:
                return "DAY";
            case TOKEN_ADVANCE:
                return "ADVANCE";
            case TOKEN_CREATE:
                return "CREATE";
            case TOKEN_STREAM:
                return "STREAM";
            case TOKEN_TABLE:
                return "TABLE";
            case TOKEN_NAME:
                return "NAME";
            case TOKEN_STRING:
                return "STRING";
            case TOKEN_INTEGER:
                return "INTEGER";
            case TOKEN_FLOAT:
                return "FLOAT";
            case TOKEN_COMMA:
                return "COMMA";
            case TOKEN_DOT:
                return "DOT";
            case TOKEN_LPAREN:
                return "LPAREN";
            case TOKEN_RPAREN:
                return "RPAREN";
            case TOKEN_EQUAL:
                return "EQUAL";
            case TOKEN_NOT_EQUAL:
                return "NOT_EQUAL";
            case TOKEN_LESS_THAN:
                return "LESS_THAN";
            case TOKEN_LESS_THAN_EQUAL:
                return "LESS_THAN_EQUAL";
            case TOKEN_GREATER_THAN:
                return "GREATER_THAN";
            case TOKEN_GREATER_THAN_EQUAL:
                return "GREATER_THAN_EQUAL";
            case TOKEN_EOS:
                return "EOS";
            case TOKEN_UNKNOWN:
                return "UNKNOWN";
            default:
                return "MISSING_STRING_EXPRESSION";
            }
        }

        long get_current_line_number() {
            return line_number_;
        }

        long get_current_cursor_point() {
            return 0;
        }

        template <typename Stream>
        void print_error_point(Stream& stream = std::cout) {
            // stream << current_line_ << std::endl;
            // for (int i = 0; i < get_current_cursor_point() - 1; ++i)
            //     stream << '_';
            // stream << '^';
        }
    };
}

#ifdef CURRENTIA_IS_LEXER_MAIN_
int main(int argc, char** argv)
{
    std::istringstream is("foo bar baz");
    currentia::Lexer lexer(&is);

    lexer.get_next_token();
    lexer.get_next_token();
    lexer.get_next_token();
    lexer.get_next_token();

    // std::istringstream is("");

    // currentia::Lexer lexer(&is);
    // currentia::Lexer::Token token;

    // while ((token = lexer.get_next_token()) != currentia::Lexer::TOKEN_EOS) {
    //     std::cout << "token => " << currentia::Lexer::token_to_string(token)
    //               << " '" << lexer.get_token_text() << "'" << std::endl;
    // }

    return 0;
}
#endif

#endif  /* ! CURRENTIA_QUERY_LEXER_H_  */
